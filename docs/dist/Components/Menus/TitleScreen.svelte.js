import './TitleScreen.svelte.css.proxy.js';
/* src/Components/Menus/TitleScreen.svelte generated by Svelte v3.48.0 */
import {
	SvelteComponent,
	append,
	attr,
	detach,
	element,
	init,
	insert,
	listen,
	noop,
	null_to_empty,
	run_all,
	safe_not_equal,
	space,
	text
} from "../../../snowpack/pkg/svelte/internal.js";

import { Deck } from "../../util.js";
import { UserDisplayName, SettingsModal, Screen } from "../../stores.js";
import "../../../snowpack/pkg/svelte.js";

function create_fragment(ctx) {
	let div0;
	let t1;
	let div1;
	let button0;
	let t2;
	let button0_class_value;
	let t3;
	let button1;
	let t4;
	let button1_class_value;
	let mounted;
	let dispose;

	return {
		c() {
			div0 = element("div");
			div0.textContent = "TableTalk";
			t1 = space();
			div1 = element("div");
			button0 = element("button");
			t2 = text("Play");
			t3 = space();
			button1 = element("button");
			t4 = text("Settings");
			attr(div0, "class", "title svelte-1lsurz4");
			attr(button0, "class", button0_class_value = "" + (null_to_empty("bg-emerald-400 text-white active:bg-emerald-500 font-bold uppercase text-sm px-6 py-3 rounded shadow hover:shadow-lg outline-none focus:outline-none mr-1 mb-1 ease-linear transition-all duration-150 " + /*bandaid*/ ctx[0]) + " svelte-1lsurz4"));
			attr(button1, "class", button1_class_value = "" + (null_to_empty("bg-cyan-300 text-white active:bg-cyan-400 font-bold uppercase text-sm px-6 py-3 rounded shadow hover:shadow-lg outline-none focus:outline-none mr-1 mb-1 ease-linear transition-all duration-150 " + /*bandaid*/ ctx[0]) + " svelte-1lsurz4"));
			attr(div1, "class", "buttons");
		},
		m(target, anchor) {
			insert(target, div0, anchor);
			insert(target, t1, anchor);
			insert(target, div1, anchor);
			append(div1, button0);
			append(button0, t2);
			append(div1, t3);
			append(div1, button1);
			append(button1, t4);

			if (!mounted) {
				dispose = [
					listen(button0, "click", /*click_handler*/ ctx[2]),
					listen(button1, "click", /*toggleSettings*/ ctx[1])
				];

				mounted = true;
			}
		},
		p(ctx, [dirty]) {
			if (dirty & /*bandaid*/ 1 && button0_class_value !== (button0_class_value = "" + (null_to_empty("bg-emerald-400 text-white active:bg-emerald-500 font-bold uppercase text-sm px-6 py-3 rounded shadow hover:shadow-lg outline-none focus:outline-none mr-1 mb-1 ease-linear transition-all duration-150 " + /*bandaid*/ ctx[0]) + " svelte-1lsurz4"))) {
				attr(button0, "class", button0_class_value);
			}

			if (dirty & /*bandaid*/ 1 && button1_class_value !== (button1_class_value = "" + (null_to_empty("bg-cyan-300 text-white active:bg-cyan-400 font-bold uppercase text-sm px-6 py-3 rounded shadow hover:shadow-lg outline-none focus:outline-none mr-1 mb-1 ease-linear transition-all duration-150 " + /*bandaid*/ ctx[0]) + " svelte-1lsurz4"))) {
				attr(button1, "class", button1_class_value);
			}
		},
		i: noop,
		o: noop,
		d(detaching) {
			if (detaching) detach(div0);
			if (detaching) detach(t1);
			if (detaching) detach(div1);
			mounted = false;
			run_all(dispose);
		}
	};
}

function instance($$self, $$props, $$invalidate) {
	var username = "";

	UserDisplayName.subscribe(value => {
		username = value;

		if (username == "") {
			$$invalidate(0, bandaid = "disabled");
		} else {
			$$invalidate(0, bandaid = "");
		}
	});

	var bandaid = "disabled";
	let settings = false;

	function toggleSettings() {
		settings = !settings;
		SettingsModal.set(settings);
	}

	SettingsModal.subscribe(value => {
		settings = value;
	});

	var testDeck = new Deck(true);
	testDeck.shuffle();

	const click_handler = () => {
		Screen.set(1);
	};

	return [bandaid, toggleSettings, click_handler];
}

class TitleScreen extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, instance, create_fragment, safe_not_equal, {});
	}
}

export default TitleScreen;