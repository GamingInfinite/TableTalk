/* src/Components/Menus/Lobby.svelte generated by Svelte v3.48.0 */
import {
	SvelteComponent,
	append,
	attr,
	component_subscribe,
	detach,
	element,
	init,
	insert,
	listen,
	noop,
	safe_not_equal,
	space
} from "../../../snowpack/pkg/svelte/internal.js";

import { Screen, lobbyRef, lobbyPlayerRef } from "../../stores.js";
import { get, remove, child } from "../../../snowpack/pkg/firebase/database.js";

function create_fragment(ctx) {
	let div0;
	let button;
	let t1;
	let div1;
	let mounted;
	let dispose;

	return {
		c() {
			div0 = element("div");
			button = element("button");
			button.textContent = "Ã—";
			t1 = space();
			div1 = element("div");
			attr(button, "class", "top-0 text-white font-bold uppercase text-sm px-6 py-3 rounded-lg shadow hover:shadow-lg outline-none focus:outline-none mb-1 bg-red-600 active:bg-red-800 ease-linear transition-all duration-150");
			attr(div0, "id", "z-10 flex absolute ml-2 mt-2");
			attr(div1, "class", "justify-right");
		},
		m(target, anchor) {
			insert(target, div0, anchor);
			append(div0, button);
			insert(target, t1, anchor);
			insert(target, div1, anchor);

			if (!mounted) {
				dispose = listen(button, "click", /*click_handler*/ ctx[2]);
				mounted = true;
			}
		},
		p: noop,
		i: noop,
		o: noop,
		d(detaching) {
			if (detaching) detach(div0);
			if (detaching) detach(t1);
			if (detaching) detach(div1);
			mounted = false;
			dispose();
		}
	};
}

function instance($$self, $$props, $$invalidate) {
	let $lobbyRef;
	let $lobbyPlayerRef;
	component_subscribe($$self, lobbyRef, $$value => $$invalidate(0, $lobbyRef = $$value));
	component_subscribe($$self, lobbyPlayerRef, $$value => $$invalidate(1, $lobbyPlayerRef = $$value));
	let players;

	get(child($lobbyRef, "players")).then(snapshot => {
		let playerJson = snapshot.toJSON();
		let playerKeys = Object.keys(playerJson);

		playerKeys.sort(function (a, b) {
			return a == b ? 0 : a > b ? 1 : -1;
		});

		let playerNames = [];
		let hostBools = [];

		for (let i = 0; i < playerKeys.length; i++) {
			const element = playerKeys[i];
		}
	});

	const click_handler = () => {
		get(child($lobbyPlayerRef, "host")).then(snapshot => {
			if (snapshot.val()) {
				remove($lobbyRef);
			}
		});

		get(child($lobbyRef, "players")).then(snapshot => {
			let playersJson = snapshot.toJSON();
			let playerCount = Object.keys(playersJson).length;

			if (playerCount == 0) {
				remove($lobbyRef);
			}
		});

		Screen.set(1);
	};

	return [$lobbyRef, $lobbyPlayerRef, click_handler];
}

class Lobby extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, instance, create_fragment, safe_not_equal, {});
	}
}

export default Lobby;